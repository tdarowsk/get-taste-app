name: Pull Request Workflow

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:unit -- --coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 14

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    permissions:
      contents: read
    env:
      ENV_NAME: integration
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      NODE_ENV: test
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Prepare test environment
        run: |
          # Create .env.test file with environment variables
          echo "SUPABASE_URL=$SUPABASE_URL" > .env.test
          echo "SUPABASE_KEY=$SUPABASE_KEY" >> .env.test
          echo "PUBLIC_SUPABASE_URL=$PUBLIC_SUPABASE_URL" >> .env.test
          echo "PUBLIC_SUPABASE_ANON_KEY=$PUBLIC_SUPABASE_ANON_KEY" >> .env.test
          echo "OPENROUTER_API_KEY=$OPENROUTER_API_KEY" >> .env.test
          echo "TMDB_API_KEY=$TMDB_API_KEY" >> .env.test
          echo "E2E_PASSWORD=$E2E_PASSWORD" >> .env.test
          echo "E2E_USERNAME=$E2E_USERNAME" >> .env.test
          echo "E2E_USERNAME_ID=$E2E_USERNAME_ID" >> .env.test
          echo "CI=true" >> .env.test

      - name: Run E2E tests
        run: npm run test:e2e:clean
        # Continue on error since we want to upload reports even if tests fail
        continue-on-error: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 14

      - name: Upload E2E test coverage
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: e2e-test-coverage
          path: coverage-e2e/
          retention-days: 14
          
      - name: Upload auth debug information
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: auth-debug
          path: |
            tests/auth.json
            login-timeout.png
          retention-days: 3
          if-no-files-found: ignore

  status-comment:
    name: PR Status Comment
    needs: [unit-test, e2e-test]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create status comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            
            const unitTestStatus = "${{ needs.unit-test.result }}" === "success" ? "✅" : "❌";
            const e2eTestStatus = "${{ needs.e2e-test.result }}" === "success" ? "✅" : "⚠️";
            
            let statusMessage = `## Pull Request Validation Summary
            
            - ${unitTestStatus} Code linting and Unit tests
            - ${e2eTestStatus} E2E tests`;
            
            if ("${{ needs.e2e-test.result }}" !== "success") {
              statusMessage += `
              
              > ⚠️ **Note:** E2E tests completed with some issues. These are typically related to visual snapshots or timing, which may vary between environments. Please review the logs and uploaded artifacts for details.`;
            }
            
            if ("${{ needs.unit-test.result }}" === "success") {
              statusMessage += `
              
              The code is ready for review.`;
            }
            
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: statusMessage
            }); 