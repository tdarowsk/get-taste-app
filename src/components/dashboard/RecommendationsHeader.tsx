import { useState } from "react";

interface RecommendationsHeaderProps {
  activeType: "music" | "film";
  onTypeChange: (type: "music" | "film") => void;
  onRefresh: () => void;
  isLoading: boolean;
}

export function RecommendationsHeader({
  activeType,
  onTypeChange,
  onRefresh,
  isLoading,
}: RecommendationsHeaderProps) {
  const [showAIInfo, setShowAIInfo] = useState(false);

  return (
    <div className="px-6 py-5 flex flex-col sm:flex-row items-start sm:items-center justify-between space-y-3 sm:space-y-0 border-b border-white/10">
      <div>
        <h2 className="text-lg font-semibold text-white flex items-center">
          {activeType === "music" ? "Music" : "Film"} Recommendations
          <button
            onClick={() => setShowAIInfo(!showAIInfo)}
            className="ml-2 text-purple-400 hover:text-purple-300 focus:outline-none"
            title="Learn about AI recommendations"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 20 20"
              fill="currentColor"
              className="w-5 h-5"
            >
              <path
                fillRule="evenodd"
                d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z"
                clipRule="evenodd"
              />
            </svg>
          </button>
        </h2>
        <p className="text-gray-400 text-sm mt-1">
          {activeType === "music"
            ? "Discover new music based on your preferences"
            : "Find your next favorite films"}
        </p>

        {showAIInfo && (
          <div className="mt-2 p-3 bg-purple-900/20 border border-purple-800/30 rounded-md text-xs text-purple-200 max-w-md">
            <p className="flex items-start">
              <svg
                className="w-4 h-4 mr-2 mt-0.5 text-purple-400 shrink-0"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z"></path>
              </svg>
              <span>
                These recommendations are generated by AI based on user preferences and trends. The
                AI analyzes preferences to suggest new content you might enjoy. Use the &quot;Force
                Generate AI Recommendations&quot; button for fresh suggestions.
              </span>
            </p>
          </div>
        )}
      </div>
      <div className="flex items-center space-x-3">
        <div className="p-1 rounded-md bg-white/5 inline-flex">
          <button
            onClick={() => onTypeChange("music")}
            className={`px-3 py-1.5 text-xs font-medium rounded-sm ${
              activeType === "music"
                ? "bg-gradient-to-r from-blue-600 to-purple-600 text-white"
                : "text-gray-300 hover:text-white"
            }`}
          >
            Music
          </button>
          <button
            onClick={() => onTypeChange("film")}
            className={`px-3 py-1.5 text-xs font-medium rounded-sm ${
              activeType === "film"
                ? "bg-gradient-to-r from-blue-600 to-purple-600 text-white"
                : "text-gray-300 hover:text-white"
            }`}
          >
            Films
          </button>
        </div>

        <button
          onClick={onRefresh}
          disabled={isLoading}
          className={`p-2 rounded-full ${
            isLoading ? "bg-white/5 text-gray-400" : "bg-white/10 hover:bg-white/20 text-white"
          }`}
        >
          <svg
            className={`w-4 h-4 ${isLoading ? "animate-spin" : ""}`}
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
              d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
            ></path>
          </svg>
        </button>
      </div>
    </div>
  );
}
